<!--
/***************************************************************
* Name        : Brand/List.cshtml
* Author      : Tom Sorteberg
* Created     : 04/19/2021
* Course      : CIS 174
* Version     : 1.0
* OS          : Windows 10 Pro, Visual Studio Community 2019
* Copyright   : This is my own original work based on
*               specifications issued by our instructor
* Description : Final Project
* I have not used unauthorized source code, either modified or
* unmodified. I have not given other fellow student(s) access
* to my program.
***************************************************************/
-->
@model BrandListViewModel
@{
    ViewData["Title"] = " | Brand Catalog";

    // aliases to make paging and sorting code shorter
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}

<h1>Brand Catalog</h1>

<table class="table table-bordered table-striped table-sm">
    @* for the name columns, update the route dictionary with the field to sort by, and then use
        that route dictionary and the current route to create route segments for sorting link *@
    <thead class="thead-dark">
        <tr>
            <th>
                @{ routes.SetSortAndDirection(nameof(Brand.BrandName), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   class="text-white">Brand Name</a>
            </th>
            <th>
                @{ routes.SetSortAndDirection(nameof(Brand.ProductLine), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   class="text-white">Product Line</a>
            </th>
            <th>Book(s)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Brand brand in Model.Brands)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@brand.BrandId"
                       asp-route-slug="@brand.BrandName.Slug()">
                        @brand.ProductLine
                    </a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@brand.BrandId"
                       asp-route-slug="@brand.BrandName.Slug()">
                        @brand.ProductLine
                    </a>
                </td>
                <td>
                    @foreach (var ib in brand.InstrumentBrands)
                    {
                        <p>
                            <a asp-action="Details" asp-controller="Instrument"
                               asp-route-id="@ib.InstrumentId"
                               asp-route-slug="@ib.Instrument.Name.Slug()">
                                @ib.Instrument.Name
                            </a>
                        </p>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@* paging links *@
@{
    @* Reset the route dictionary to the current route values. This is necessary
        to clear the changes made while creating the sorting links above. Clone so
        don't overwrite current route segment values. *@
    routes = Model.CurrentRoute.Clone();

    @* update route dictionary with page number in 'i' and then use
        updated route dictionary to create route segments for paging link. *@
    for (int i = 1; i <= Model.TotalPages; i++)
    {
        routes.PageNumber = i;
        <a asp-action="List" asp-all-route-data="@routes"
           class="btn btn-outline-primary @Nav.Active(i, current.PageNumber)">@i</a>
    }
}
